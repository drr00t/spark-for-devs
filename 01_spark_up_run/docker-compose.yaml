services:
  spark-master:
    container_name: spark-master
    build: .
    image: spark:3.4-comet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "4040:4040"
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./spark-data:/opt/spark/data
      - ./spark-logs:/opt/spark/spark-events
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_WORKLOAD=master
      - SPARK_NO_DAEMONIZE=true
    networks:
      - spark_dev_net

  spark-worker:
    container_name: spark-worker
    build: .
    image: spark:3.4-comet
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=3
      - SPARK_WORKER_MEMORY=2G
      - SPARK_DRIVER_CORES=2
      - SPARK_DRIVER_MEMORY=2G
      - SPARK_WORKLOAD=worker
      - SPARK_NO_DAEMONIZE=true
      - AWS_ACCESS_KEY_ID=pzpuAbmlUwAIu4iYPsp7
      - AWS_SECRET_ACCESS_KEY=VNhWmNnhSsIIVoUzSKre8zSjcR6XffXORl1s16Vh
      - AWS_REGION=us-east-1
    volumes:
      - ./spark-logs:/opt/spark/spark-events
    networks:
      - spark_dev_net

  spark-history:
    container_name: spark-history
    build: .
    image: spark:3.4-comet
    depends_on:
      - spark-master
    ports:
      - "18080:18080"
    volumes:
      - ./spark-logs:/opt/spark/spark-events
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKLOAD=history
      - SPARK_NO_DAEMONIZE=true
    networks:
      - spark_dev_net

  minio:
    container_name: minio
    hostname: minio
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - ./minio-data:/data
    command: ["server", "/data", "--console-address", ":9001"]
    networks:
      - spark_dev_net

networks:
  spark_dev_net:
    name: spark_dev_net
    external: true
